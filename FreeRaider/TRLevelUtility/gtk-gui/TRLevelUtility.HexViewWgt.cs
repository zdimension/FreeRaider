
// This file has been generated by the GUI designer. Do not modify.
namespace TRLevelUtility
{
	public partial class HexViewWgt
	{
		private global::Gtk.VBox vbox2;

		private global::Gtk.HBox hbox2;

		private global::Gtk.ComboBox cbxWidth;

		private global::Gtk.ComboBox cbxEncoding;

		private global::Gtk.HBox hbox1;

		private global::Gtk.ScrolledWindow GtkScrolledWindow;

		private global::Gtk.TextView textview1;

		private global::Gtk.VScrollbar vscrollbar1;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget TRLevelUtility.HexViewWgt
			global::Stetic.BinContainer.Attach(this);
			this.Name = "TRLevelUtility.HexViewWgt";
			// Container child TRLevelUtility.HexViewWgt.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.cbxWidth = global::Gtk.ComboBox.NewText();
			this.cbxWidth.AppendText(global::Mono.Unix.Catalog.GetString("8"));
			this.cbxWidth.AppendText(global::Mono.Unix.Catalog.GetString("10"));
			this.cbxWidth.AppendText(global::Mono.Unix.Catalog.GetString("16"));
			this.cbxWidth.AppendText(global::Mono.Unix.Catalog.GetString("24"));
			this.cbxWidth.AppendText(global::Mono.Unix.Catalog.GetString("32"));
			this.cbxWidth.Name = "cbxWidth";
			this.cbxWidth.Active = 2;
			this.hbox2.Add(this.cbxWidth);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.cbxWidth]));
			w1.Position = 0;
			// Container child hbox2.Gtk.Box+BoxChild
			this.cbxEncoding = global::Gtk.ComboBox.NewText();
			this.cbxEncoding.Name = "cbxEncoding";
			this.hbox2.Add(this.cbxEncoding);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.cbxEncoding]));
			w2.Position = 1;
			this.vbox2.Add(this.hbox2);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.hbox2]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.textview1 = new global::Gtk.TextView();
			this.textview1.CanFocus = true;
			this.textview1.Name = "textview1";
			this.textview1.Editable = false;
			this.GtkScrolledWindow.Add(this.textview1);
			this.hbox1.Add(this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.GtkScrolledWindow]));
			w5.Position = 0;
			// Container child hbox1.Gtk.Box+BoxChild
			this.vscrollbar1 = new global::Gtk.VScrollbar(null);
			this.vscrollbar1.Name = "vscrollbar1";
			this.vscrollbar1.Adjustment.Upper = 100D;
			this.vscrollbar1.Adjustment.PageIncrement = 10D;
			this.vscrollbar1.Adjustment.PageSize = 10D;
			this.vscrollbar1.Adjustment.StepIncrement = 1D;
			this.hbox1.Add(this.vscrollbar1);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.vscrollbar1]));
			w6.Position = 1;
			w6.Expand = false;
			w6.Fill = false;
			this.vbox2.Add(this.hbox1);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.hbox1]));
			w7.Position = 1;
			this.Add(this.vbox2);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.Hide();
			this.cbxWidth.Changed += new global::System.EventHandler(this.OnCbxWidthChanged);
			this.cbxEncoding.Changed += new global::System.EventHandler(this.OnCbxEncodingChanged);
			this.textview1.SizeAllocated += new global::Gtk.SizeAllocatedHandler(this.OnTextview1SizeAllocated);
			this.vscrollbar1.ValueChanged += new global::System.EventHandler(this.OnVscrollbar1ValueChanged);
		}
	}
}
