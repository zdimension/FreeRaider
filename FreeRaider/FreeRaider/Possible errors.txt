
Dans Mesh.cs, L1078, je fais tout en une seule ligne sur le Vector3 au lieu de faire une ligne par composante comme dans OpenTomb. A vérifier.

Dans GLFont.cs, L212, j'utilise GL.TexParameter alors que OpenTomb utilise glTexParameterI.

Dans GLFont.cs, L221 et quelques autres fois OpenTK a inversé format et internalFormat dans les paramètres de TexImage2D, du coup
je cast manuellement.

Dans Helper.cs, L173, j'incrémente direct le pointeur au lieu de faire sizeof(T)*i qui n'est peut-être pas nécessaire. A vérifier.

Dans Hair.cs, L246, je modifie Joints[currJoint] alors que OpenTomb modifie Joints[i] (i E [0; Elements.Count] / for)

Dans BorderedTextureAtlas.cs, L165, j'utilise Constants.Sqrt2 au lieu de 1.41 (précision) ; ça marchera p't'être pas.

Dans Render.cs, L166, je fais (IntPtr)Marshal.SizeOf(buffer) au lieu de (IntPtr)(buffer.Count * Marshal.SizeOf(buffer[0]))

Dans Render.cs, L1500, je passe le float[] alors que OpenTomb le convertit d'abord en float*

Dans Render.cs, L1434, j'utilise une méthode pour avoir les Ticks depuis le démarrage du jeu alors que OpenTomb utilise SDL_GetTicks donc 
pas sûr que ça marche

Dans AnimStateControl.cs, L979, nextFc.Cb = ent.RayCb mais après je modif certaines props de nextFc.Cb qui modif donc ent.RayCb

Dans AnimStateControl.cs, L1380, pour saut RIGHT -> JumpLeft et LEFT -> JumpRight, pas forcément voulu -> à vérifier
"" aussi L1443 et L1470

Dans AnimStateControl.cs, L3467 et L3471, je fais currFc.FloorObject = nextFc.FloorObject (ce qui copie l'objet, ce qui n'est pas forcément voulu)

Dans Audio.cs, L1952, je passe wavMem sans ref ou pointeur alors que c'est une struct (c'est une public ref struct mais je suis pas sûr que ça passe bien en référence)

Dans Entity.cs, L672 j'utilise Vec3Min qui marche peut-être pas